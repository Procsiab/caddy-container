name: Build the container image and push it to Docker Hub

on:
  push:
    tags:
      - 'v[0-9]+.'
      - 'v[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+'
env:
  IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/caddy
  CWD: ${{ github.workspace }}

jobs:

  setup:
    name: Download the code and QEMU bineries
    runs-on: ubuntu-latest
    steps:
      - name: Download code from GitHub
        uses: actions/checkout@v2
      - name: Save the tag that triggered the workflow to an env file
        run: |
          echo "GH_TAG=${GITHUB_REF/refs\/tags\//}" >> ${CWD}/GH_TAG.env && cat ${CWD}/GH_TAG.env
      - name: Install QEMU static binaries
        run: |
          sudo apt-get update && sudo apt-get install -y qemu-user-static
      - name: Copy QEMU binaries into workspace folder
        run: |
          cp /usr/bin/qemu-aarch64-static /usr/bin/qemu-arm-static ${CWD}
      - name: Upload repo folder artifact
        uses: actions/upload-artifact@v2
        with:
          name: repo-folder
          path: ${{ env.CWD }}
          retention-days: 1

  build-push:
    name: Build the container image and push to Docker Hub
    strategy:
      fail-fast: false
      matrix:
        container_arch: [aarch64, amd64, armv7]
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Download repo folder artifact
        uses: actions/download-artifact@v2
        with:
          name: repo-folder
          path: ${{ env.CWD }}
      - name: Load version tag into env var
        run: |
          cat ${CWD}/GH_TAG.env >> $GITHUB_ENV
      - name: Run QEMU registration if target arch differs from host
        if: ${{ matrix.container_arch != 'amd64' }}
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - name: Build and tag the container image
        run: |
          docker build -f ${CWD}/Dockerfile.${{ matrix.container_arch }} -t ${IMAGE_NAME}:${{ env.GH_TAG }}-${{ matrix.container_arch }} ${CWD}
      - name: Login to Docker Hub
        run: |
          echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
      - name: Push the container image
        run: |
          docker push ${IMAGE_NAME}:${{ env.GH_TAG }}-${{ matrix.container_arch }}
      - name: Logout from Docker Hub
        run: |
          docker logout
